/*
durations
 */
@rp-fade-duration: 500ms;

/*
curves
 */
@rp-deceleration-curve: cubic-bezier(0.0, 0.0, 0.2, 1);
@rp-acceleration-curve: cubic-bezier(0.4, 0.0, 1, 1);
@rp-expando-curve: cubic-bezier(0.35, 0, 0.25, 1);


/*
rpLink cards
 */
 @keyframes card_enter {
     from {
         transform: translateY(100px);
     }
     to {
         transform: translateY(0px);
     }
 }

 @keyframes card_leave {
     from {
         transform: translateY(0px);
     }
     to {
         transform: translateY(1000px);
     }
 }

.rp-animation-card {
    display: block;
}

.rp-animation-card.ng-enter {
    animation: card_enter 200ms @rp-deceleration-curve !important;
}

.rp-animation-card.ng-leave { //use .rp-main.ng-leave (ng-view) instead
    animation: card_leave 200ms @rp-acceleration-curve !important;
}

.rp-animation-search-card {
    display: block;
}

.rp-animation-search-card.ng-enter {
    animation: card_enter 500ms @rp-deceleration-curve !important;
}

/*
images
 */
 @keyframes image_fadein {
     from { opacity: 0; }
     to   { opacity: 1; }
 }

img, video {
    animation: image_fadein @rp-fade-duration !important;
}

/*
sidenav arrow turn
 */

.rp-animation-sidenav-expando-icon {
    transition: all 300ms @rp-deceleration-curve;
}

.rp-animation-sidenav-expando-icon-open {
    transform: rotate(-180deg);
}


/*
sidenav subreddits
 */
@keyframes subreddits_enter {
    from {
        max-height: 0px;
        background-color: @mdc-grey-300;
    }
    to {
        max-height: 5000px;
        background-color: @rp-background-content;
    }
}
@keyframes subreddits_leave {
    from {
        max-height: 5000px;
        background-color: @rp-background-content;
    }
    to {
        max-height: 0px;
        background-color: @mdc-grey-300;
    }
}

.rp-animation-subreddits.ng-enter {
    animation: subreddits_enter 750ms @rp-expando-curve;
}

.rp-animation-subreddits.ng-leave {
    animation: subreddits_leave 750ms @rp-expando-curve;
}

/*
message sidenav menu
 */
 @keyframes messages_menu_enter {
     from {
         max-height: 0px;
         background-color: @mdc-grey-300;
     }
     to {
         max-height: 144px;
         background-color: @rp-background-content;
     }
 }
 @keyframes messages_menu_leave {
     from {
         max-height: 144px;
         background-color: @rp-background-content;
     }
     to {
         max-height: 0px;
         background-color: @mdc-grey-300;
     }
 }

 .rp-animation-messages-menu.ng-enter {
     animation: subreddits_enter 500ms @rp-expando-curve;
 }

 .rp-animation-messages-menu.ng-leave {
     animation: subreddits_leave 500ms @rp-expando-curve;
 }


/*
sidenav search form
  */
@keyframes search_form_enter {
    from {
        max-height: 0px;
        background-color: @mdc-grey-300;

    }
    to {
        max-height: 400px;
        background-color: @rp-background-content;
    }
}

@keyframes search_form_leave {
    from {
        max-height: 400px;
        background-color: @rp-background-content;
    }
    to {
        max-height: 0px;
        background-color: @mdc-grey-300;
    }
}

.rp-animation-searchform.ng-enter {
    animation: search_form_enter 200ms ease-in !important;
}
.rp-animation-searchform.ng-leave {
    animation: search_form_leave 200ms ease-out !important;
}



/*
refresh button spin
 */
 @keyframes refresh_spin {
     from {
         transform: rotate(0deg);
     }
     to {
         transform: rotate(360deg);
     }
 }

.rp-animation-spin {
    animation: refresh_spin 0.75s linear !important;
    animation-iteration-count: infinite !important;
}



/*
article
entrance only, leaving taken care of by ngView animation.
*/

 @keyframes article_enter {
     from {
         transform: translateY(500px);
     }
     to {
         transform: translateY(0px);
     }
 }

//use card loaded class to only play the animation once article content is loaded
.rp-article-card-loaded.rp-animation-article-add {
    animation: article_enter 350ms @rp-deceleration-curve !important;
}



/*
comments
 */
 @keyframes comment_enter {
     from {
         transform: translateY(300px);
        //  opacity: 0;
     }
     to {
         transform: translateY(0px);
        //  opacity: 1;
     }
 }

//ng-enter doesnt proc the first time.
.rp-animation-comment {
    animation: comment_enter 3s @rp-deceleration-curve !important;
}

/*
ngView / rpMain
 */
 @keyframes main_enter {
     from {
         transform: translateY(500px);
        // opacity: 0;
     }
     to {
         transform: translateY(0px);
        // opacity: 1;
     }
 }

 @keyframes main_leave {
     from {
          transform: translateY(0px);
        //  opacity: 1;
     }
     to {
         transform: translateY(1000px);
        //  opacity: 0;
     }
 }

.rp-animation-main.ng-enter {
    animation: article_enter 250ms @rp-deceleration-curve !important;
    // display: block !important;
    max-width: 0 !important;
    // max-width: 0 !important;
    // animation-delay: 500ms !important;

}


.rp-animation-main.ng-leave {
    display: block !important;
    animation: main_leave 250ms @rp-acceleration-curve !important;
}




/*
toolbar
 */

 @keyframes toolbar_enter {
     from {
         transform: translateY(-64px);
     }
     to {
         transform: translateY(0px);
     }
 }

.rp-animation-toolbar { //no ng-enter because it doesn't work on the first load.
    animation: toolbar_enter 300ms @rp-deceleration-curve !important;

}



/*
tabbar
 */
 // @keyframes tabbar_enter {
 //     from {
 //         transform: translateY(-200px);
 //     }
 //     to {
 //         transform: translateY(0px);
 //     }
 // }
 //
 // @keyframes tabbar_leave {
 //     from {
 //         transform: translateY(0px);
 //     }
 //     to {
 //         transform: translateY(-50px);
 //     }
 // }

 @keyframes tabbar_enter {
     from {
         max-height: 0px;
         min-height: 0px;
     }
     to {
         max-height: 48px;
         min-height: 48px;
     }
 }

 @keyframes tabbar_leave {
     from {
         max-height: 48px;
         min-height: 48px;
     }
     to {
         max-height: 0px;
         min-height: 0px;
     }
 }

.rp-tab-toolbar {
    overflow: hidden;
}

.rp-animation-tabbar { //no ng-enter because it does'nt work on the first load.
    animation: tabbar_enter 250ms @rp-acceleration-curve !important;

}

.rp-animation-tabbar.ng-leave {
    animation: tabbar_leave 250ms @rp-deceleration-curve !important;
}



/*
beta
 */
 @keyframes beta_enter {
     from {
         top: -100px;
         left: -100px;
     }
     to {
         top: 0px;
         left: 0px;
     }
 }


.rp-animation-beta { //no ng-enter because it does'nt work on the first load.
    animation: beta_enter 1500ms @rp-deceleration-curve !important;
}

/*
sidenav
 */

 @keyframes sidenav_enter {
     from {
         transform: translateX(-630px);
     }
     to {
         transform: translateX(0px);
     }
 }

.rp-animation-sidenav-enter { //no ng-enter because it does'nt work on the first load.
    animation: sidenav_enter 1300ms @rp-deceleration-curve !important;
}

// .rp-animation-sidenav {
//     transition: all 5s !important;
//
// }


/*
md-dialog
 */

//disables dialog transitions
// md-dialog {
//     transition-duration: 0s !important;
// }

@keyframes dialog_enter {
    from {
        transform: translateY(1000px);
    }
    to {
        transform: translateY(0px);
    }
}

@keyframes card_leave {
    from {
        transform: translateY(0px);
    }
    to {
        transform: translateY(1000px);
    }
}

md-dialog {
}

md-dialog.md-transition-in {
    transition-duration: 500ms;
    animation: card_enter 500ms @rp-deceleration-curve;
}

md-dialog.md-transition-out {
    transition-duration: 500ms;
    animation: card_leave 500ms @rp-deceleration-curve;
}

md-dialog.md-transition-in.rp-animation-dialog-none {
    transition-duration: 0s;
    animation: card_enter 0s;
}

md-dialog.md-transition-out.rp-animation-dialog-none {
    transition-duration: 0s;
    animation: card_leave 0s;
}

/*
Animation Guard
disables animations on selected elements when the animation settings has been changed
from false to true.
This will fix sidenav, toolbar and beta tag animations playing when the setting has been changed.
It will also mean animations on these elements will not be played until after the page has been reloaded.

 */

.rp-animation-guard {
    animation: none !important;
    transition: 0s !important;
}
